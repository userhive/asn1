// Code generated by "stringer -type Result -trimprefix Result"; DO NOT EDIT.

package ldaputil

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ResultSuccess-0]
	_ = x[ResultOperationsError-1]
	_ = x[ResultProtocolError-2]
	_ = x[ResultTimeLimitExceeded-3]
	_ = x[ResultSizeLimitExceeded-4]
	_ = x[ResultCompareFalse-5]
	_ = x[ResultCompareTrue-6]
	_ = x[ResultAuthMethodNotSupported-7]
	_ = x[ResultStrongAuthRequired-8]
	_ = x[ResultReferral-10]
	_ = x[ResultAdminLimitExceeded-11]
	_ = x[ResultUnavailableCriticalExtension-12]
	_ = x[ResultConfidentialityRequired-13]
	_ = x[ResultSaslBindInProgress-14]
	_ = x[ResultNoSuchAttribute-16]
	_ = x[ResultUndefinedAttributeType-17]
	_ = x[ResultInappropriateMatching-18]
	_ = x[ResultConstraintViolation-19]
	_ = x[ResultAttributeOrValueExists-20]
	_ = x[ResultInvalidAttributeSyntax-21]
	_ = x[ResultNoSuchObject-32]
	_ = x[ResultAliasProblem-33]
	_ = x[ResultInvalidDNSyntax-34]
	_ = x[ResultIsLeaf-35]
	_ = x[ResultAliasDereferencingProblem-36]
	_ = x[ResultInappropriateAuthentication-48]
	_ = x[ResultInvalidCredentials-49]
	_ = x[ResultInsufficientAccessRights-50]
	_ = x[ResultBusy-51]
	_ = x[ResultUnavailable-52]
	_ = x[ResultUnwillingToPerform-53]
	_ = x[ResultLoopDetect-54]
	_ = x[ResultSortControlMissing-60]
	_ = x[ResultOffsetRangeError-61]
	_ = x[ResultNamingViolation-64]
	_ = x[ResultObjectClassViolation-65]
	_ = x[ResultNotAllowedOnNonLeaf-66]
	_ = x[ResultNotAllowedOnRDN-67]
	_ = x[ResultEntryAlreadyExists-68]
	_ = x[ResultObjectClassModsProhibited-69]
	_ = x[ResultResultsTooLarge-70]
	_ = x[ResultAffectsMultipleDSAs-71]
	_ = x[ResultVirtualListViewErrorOrControlError-76]
	_ = x[ResultOtherError-80]
	_ = x[ResultServerDown-81]
	_ = x[ResultLocalError-82]
	_ = x[ResultEncodingError-83]
	_ = x[ResultDecodingError-84]
	_ = x[ResultTimeout-85]
	_ = x[ResultAuthUnknown-86]
	_ = x[ResultFilterError-87]
	_ = x[ResultUserCanceled-88]
	_ = x[ResultParamError-89]
	_ = x[ResultNoMemory-90]
	_ = x[ResultConnectError-91]
	_ = x[ResultNotSupported-92]
	_ = x[ResultControlNotFound-93]
	_ = x[ResultNoResultsReturned-94]
	_ = x[ResultMoreResultsToReturn-95]
	_ = x[ResultClientLoop-96]
	_ = x[ResultReferralLimitExceeded-97]
	_ = x[ResultInvalidResponse-100]
	_ = x[ResultAmbiguousResponse-101]
	_ = x[ResultTLSNotSupported-112]
	_ = x[ResultIntermediateResponse-113]
	_ = x[ResultUnknownType-114]
	_ = x[ResultCanceled-118]
	_ = x[ResultNoSuchOperation-119]
	_ = x[ResultTooLate-120]
	_ = x[ResultCannotCancel-121]
	_ = x[ResultAssertionFailed-122]
	_ = x[ResultAuthorizationDenied-123]
	_ = x[ResultSyncRefreshRequired-4096]
	_ = x[ResultClientError-200]
}

const _Result_name = "SuccessOperationsErrorProtocolErrorTimeLimitExceededSizeLimitExceededCompareFalseCompareTrueAuthMethodNotSupportedStrongAuthRequiredReferralAdminLimitExceededUnavailableCriticalExtensionConfidentialityRequiredSaslBindInProgressNoSuchAttributeUndefinedAttributeTypeInappropriateMatchingConstraintViolationAttributeOrValueExistsInvalidAttributeSyntaxNoSuchObjectAliasProblemInvalidDNSyntaxIsLeafAliasDereferencingProblemInappropriateAuthenticationInvalidCredentialsInsufficientAccessRightsBusyUnavailableUnwillingToPerformLoopDetectSortControlMissingOffsetRangeErrorNamingViolationObjectClassViolationNotAllowedOnNonLeafNotAllowedOnRDNEntryAlreadyExistsObjectClassModsProhibitedResultsTooLargeAffectsMultipleDSAsVirtualListViewErrorOrControlErrorOtherErrorServerDownLocalErrorEncodingErrorDecodingErrorTimeoutAuthUnknownFilterErrorUserCanceledParamErrorNoMemoryConnectErrorNotSupportedControlNotFoundNoResultsReturnedMoreResultsToReturnClientLoopReferralLimitExceededInvalidResponseAmbiguousResponseTLSNotSupportedIntermediateResponseUnknownTypeCanceledNoSuchOperationTooLateCannotCancelAssertionFailedAuthorizationDeniedClientErrorSyncRefreshRequired"

var _Result_map = map[Result]string{
	0:    _Result_name[0:7],
	1:    _Result_name[7:22],
	2:    _Result_name[22:35],
	3:    _Result_name[35:52],
	4:    _Result_name[52:69],
	5:    _Result_name[69:81],
	6:    _Result_name[81:92],
	7:    _Result_name[92:114],
	8:    _Result_name[114:132],
	10:   _Result_name[132:140],
	11:   _Result_name[140:158],
	12:   _Result_name[158:186],
	13:   _Result_name[186:209],
	14:   _Result_name[209:227],
	16:   _Result_name[227:242],
	17:   _Result_name[242:264],
	18:   _Result_name[264:285],
	19:   _Result_name[285:304],
	20:   _Result_name[304:326],
	21:   _Result_name[326:348],
	32:   _Result_name[348:360],
	33:   _Result_name[360:372],
	34:   _Result_name[372:387],
	35:   _Result_name[387:393],
	36:   _Result_name[393:418],
	48:   _Result_name[418:445],
	49:   _Result_name[445:463],
	50:   _Result_name[463:487],
	51:   _Result_name[487:491],
	52:   _Result_name[491:502],
	53:   _Result_name[502:520],
	54:   _Result_name[520:530],
	60:   _Result_name[530:548],
	61:   _Result_name[548:564],
	64:   _Result_name[564:579],
	65:   _Result_name[579:599],
	66:   _Result_name[599:618],
	67:   _Result_name[618:633],
	68:   _Result_name[633:651],
	69:   _Result_name[651:676],
	70:   _Result_name[676:691],
	71:   _Result_name[691:710],
	76:   _Result_name[710:744],
	80:   _Result_name[744:754],
	81:   _Result_name[754:764],
	82:   _Result_name[764:774],
	83:   _Result_name[774:787],
	84:   _Result_name[787:800],
	85:   _Result_name[800:807],
	86:   _Result_name[807:818],
	87:   _Result_name[818:829],
	88:   _Result_name[829:841],
	89:   _Result_name[841:851],
	90:   _Result_name[851:859],
	91:   _Result_name[859:871],
	92:   _Result_name[871:883],
	93:   _Result_name[883:898],
	94:   _Result_name[898:915],
	95:   _Result_name[915:934],
	96:   _Result_name[934:944],
	97:   _Result_name[944:965],
	100:  _Result_name[965:980],
	101:  _Result_name[980:997],
	112:  _Result_name[997:1012],
	113:  _Result_name[1012:1032],
	114:  _Result_name[1032:1043],
	118:  _Result_name[1043:1051],
	119:  _Result_name[1051:1066],
	120:  _Result_name[1066:1073],
	121:  _Result_name[1073:1085],
	122:  _Result_name[1085:1100],
	123:  _Result_name[1100:1119],
	200:  _Result_name[1119:1130],
	4096: _Result_name[1130:1149],
}

func (i Result) String() string {
	if str, ok := _Result_map[i]; ok {
		return str
	}
	return "Result(" + strconv.FormatInt(int64(i), 10) + ")"
}
