// Code generated by "stringer -type Application -trimprefix Application"; DO NOT EDIT.

package ldaputil

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ApplicationBindRequest-0]
	_ = x[ApplicationBindResponse-1]
	_ = x[ApplicationUnbindRequest-2]
	_ = x[ApplicationSearchRequest-3]
	_ = x[ApplicationSearchResultEntry-4]
	_ = x[ApplicationSearchResultDone-5]
	_ = x[ApplicationModifyRequest-6]
	_ = x[ApplicationModifyResponse-7]
	_ = x[ApplicationAddRequest-8]
	_ = x[ApplicationAddResponse-9]
	_ = x[ApplicationDeleteRequest-10]
	_ = x[ApplicationDeleteResponse-11]
	_ = x[ApplicationModifyDNRequest-12]
	_ = x[ApplicationModifyDNResponse-13]
	_ = x[ApplicationCompareRequest-14]
	_ = x[ApplicationCompareResponse-15]
	_ = x[ApplicationAbandonRequest-16]
	_ = x[ApplicationSearchResultReference-19]
	_ = x[ApplicationExtendedRequest-23]
	_ = x[ApplicationExtendedResponse-24]
}

const (
	_Application_name_0 = "BindRequestBindResponseUnbindRequestSearchRequestSearchResultEntrySearchResultDoneModifyRequestModifyResponseAddRequestAddResponseDeleteRequestDeleteResponseModifyDNRequestModifyDNResponseCompareRequestCompareResponseAbandonRequest"
	_Application_name_1 = "SearchResultReference"
	_Application_name_2 = "ExtendedRequestExtendedResponse"
)

var (
	_Application_index_0 = [...]uint8{0, 11, 23, 36, 49, 66, 82, 95, 109, 119, 130, 143, 157, 172, 188, 202, 217, 231}
	_Application_index_2 = [...]uint8{0, 15, 31}
)

func (i Application) String() string {
	switch {
	case i <= 16:
		return _Application_name_0[_Application_index_0[i]:_Application_index_0[i+1]]
	case i == 19:
		return _Application_name_1
	case 23 <= i && i <= 24:
		i -= 23
		return _Application_name_2[_Application_index_2[i]:_Application_index_2[i+1]]
	default:
		return "Application(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
